# Use a specific .NET 6.0 image
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src

# Copy csproj files
COPY HoneyWebPlatform.Web/*.csproj ./HoneyWebPlatform.Web/
COPY HoneyWebPlatform.Data/*.csproj ./HoneyWebPlatform.Data/
COPY HoneyWebPlatform.Data.Models/*.csproj ./HoneyWebPlatform.Data.Models/
COPY HoneyWebPlatform.Services.Data/*.csproj ./HoneyWebPlatform.Services.Data/
COPY HoneyWebPlatform.Services.Data.Models/*.csproj ./HoneyWebPlatform.Services.Data.Models/
COPY HoneyWebPlatform.Services.Mapping/*.csproj ./HoneyWebPlatform.Services.Mapping/
COPY HoneyWebPlatform.Web.Infrastructure/*.csproj ./HoneyWebPlatform.Web.Infrastructure/
COPY HoneyWebPlatform.Web.ViewModels/*.csproj ./HoneyWebPlatform.Web.ViewModels/

# Restore dependencies
RUN dotnet restore "HoneyWebPlatform.Web/HoneyWebPlatform.Web.csproj"

# Copy everything else
COPY . .

# Build and publish
WORKDIR "/src/HoneyWebPlatform.Web"
RUN dotnet build "HoneyWebPlatform.Web.csproj" -c Release -o /app/build
RUN dotnet publish "HoneyWebPlatform.Web.csproj" -c Release -o /app/publish

# Ensure static files are included
RUN ls -la /app/publish/wwwroot/

# Final stage - Fixed for Railway deployment
FROM base AS final
WORKDIR /app

COPY --from=build /app/publish .

# Create DataProtection-Keys directory for persistent antiforgery tokens
RUN mkdir -p /tmp/dataprotection-keys && chmod 755 /tmp/dataprotection-keys

ENTRYPOINT ["dotnet", "HoneyWebPlatform.Web.dll"]
